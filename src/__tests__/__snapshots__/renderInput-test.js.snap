// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`allows overriding defaults 1`] = `
<div
  className="uk-margin"
>
  <label
    className="uk-form-label"
    htmlFor="email-confirm"
  >
    E-mail
  </label>
  <div
    className="uk-form-controls"
  >
    <Input
      autoComplete="username"
      danger={false}
      icon={undefined}
      id="email-confirm"
      name="email"
      onBlur={[Function]}
      onChange={[Function]}
      onDragStart={[Function]}
      onDrop={[Function]}
      onFocus={[Function]}
      placeholder="Confirm E-mail"
      value=""
      width={false}
    />
  </div>
</div>
`;

exports[`prevents overriding the danger prop on <Input /> 1`] = `
<div
  className="uk-margin"
>
  <Input
    autoComplete="username"
    danger={false}
    icon={undefined}
    id={undefined}
    name="email"
    onBlur={[Function]}
    onChange={[Function]}
    onDragStart={[Function]}
    onDrop={[Function]}
    onFocus={[Function]}
    placeholder="E-mail"
    value=""
    width={false}
  />
</div>
`;

exports[`prevents overriding the danger prop on <Input /> 2`] = `
<div
  className="uk-margin"
>
  <Input
    autoComplete="username"
    danger={true}
    icon={undefined}
    id={undefined}
    name="email"
    onBlur={[Function]}
    onChange={[Function]}
    onDragStart={[Function]}
    onDrop={[Function]}
    onFocus={[Function]}
    placeholder="E-mail"
    value=""
    width={false}
  />
  <div
    className="uk-text-danger uk-inline uk-margin-small-left"
  >
    Required
  </div>
</div>
`;

exports[`prioritizes error over help 1`] = `
<div
  className="uk-margin"
>
  <Input
    autoComplete="username"
    danger={true}
    icon={undefined}
    id={undefined}
    name="email"
    onBlur={[Function]}
    onChange={[Function]}
    onDragStart={[Function]}
    onDrop={[Function]}
    onFocus={[Function]}
    placeholder="E-mail"
    value=""
    width={false}
  />
  <div
    className="uk-text-danger uk-inline uk-margin-small-left"
  >
    Errors have precedence.
  </div>
</div>
`;

exports[`prioritizes error over help 2`] = `
<div
  className="uk-margin"
>
  <Input
    autoComplete="username"
    danger={true}
    icon={undefined}
    id={undefined}
    name="email"
    onBlur={[Function]}
    onChange={[Function]}
    onDragStart={[Function]}
    onDrop={[Function]}
    onFocus={[Function]}
    placeholder="E-mail"
    value=""
    width={false}
  />
  <div
    className="uk-text-danger uk-block uk-margin-bottom"
  >
    Errors have precedence.
  </div>
</div>
`;

exports[`prioritizes error over help 3`] = `
<div
  className="uk-margin"
>
  <label
    className="uk-form-label"
    htmlFor="email"
  >
    E-mail
  </label>
  <div
    className="uk-form-controls"
  >
    <Input
      autoComplete="username"
      danger={true}
      icon={undefined}
      id="email"
      name="email"
      onBlur={[Function]}
      onChange={[Function]}
      onDragStart={[Function]}
      onDrop={[Function]}
      onFocus={[Function]}
      placeholder="E-mail"
      value=""
      width={false}
    />
    <div
      className="uk-text-danger uk-inline uk-margin-small-left"
    >
      Errors have precedence.
    </div>
  </div>
</div>
`;

exports[`prioritizes error over help 4`] = `
<div
  className="uk-margin"
>
  <label
    className="uk-form-label"
    htmlFor="email"
  >
    E-mail
  </label>
  <div
    className="uk-form-controls"
  >
    <Input
      autoComplete="username"
      danger={true}
      icon={undefined}
      id="email"
      name="email"
      onBlur={[Function]}
      onChange={[Function]}
      onDragStart={[Function]}
      onDrop={[Function]}
      onFocus={[Function]}
      placeholder="E-mail"
      value=""
      width={false}
    />
    <div
      className="uk-text-danger uk-block uk-margin-bottom"
    >
      Errors have precedence.
    </div>
  </div>
</div>
`;

exports[`renders asyncValidating status correctly 1`] = `
<div
  className="uk-margin"
>
  <Input
    autoComplete="username"
    danger={false}
    icon="spinner"
    id={undefined}
    name="email"
    onBlur={[Function]}
    onChange={[Function]}
    onDragStart={[Function]}
    onDrop={[Function]}
    onFocus={[Function]}
    placeholder="E-mail"
    value=""
    width={false}
  />
</div>
`;

exports[`renders asyncValidating status correctly 2`] = `
<div
  className="uk-margin"
>
  <Input
    autoComplete="username"
    danger={false}
    flip={true}
    icon="spinner"
    id={undefined}
    name="email"
    onBlur={[Function]}
    onChange={[Function]}
    onDragStart={[Function]}
    onDrop={[Function]}
    onFocus={[Function]}
    placeholder="E-mail"
    value=""
    width={false}
  />
</div>
`;

exports[`renders correctly 1`] = `
<div
  className="uk-margin"
>
  <Input
    autoComplete="username"
    danger={false}
    icon={undefined}
    id={undefined}
    name="email"
    onBlur={[Function]}
    onChange={[Function]}
    onDragStart={[Function]}
    onDrop={[Function]}
    onFocus={[Function]}
    placeholder="E-mail"
    value=""
    width={false}
  />
</div>
`;

exports[`renders correctly 2`] = `
<div
  className="uk-inline"
>
  <label
    className="uk-form-label"
    htmlFor="email"
  >
    E-mail
  </label>
  <div
    className="uk-form-controls"
  >
    <Input
      autoComplete="username"
      danger={false}
      icon={undefined}
      id="email"
      name="email"
      onBlur={[Function]}
      onChange={[Function]}
      onDragStart={[Function]}
      onDrop={[Function]}
      onFocus={[Function]}
      placeholder="E-mail"
      type="email"
      value=""
      width={false}
    />
  </div>
</div>
`;

exports[`renders error messages correctly 1`] = `
<div
  className="uk-margin"
>
  <Input
    autoComplete="username"
    danger={false}
    icon={undefined}
    id={undefined}
    name="email"
    onBlur={[Function]}
    onChange={[Function]}
    onDragStart={[Function]}
    onDrop={[Function]}
    onFocus={[Function]}
    placeholder="E-mail"
    value=""
    width={false}
  />
</div>
`;

exports[`renders error messages correctly 2`] = `
<div
  className="uk-margin"
>
  <Input
    autoComplete="username"
    danger={true}
    icon={undefined}
    id={undefined}
    name="email"
    onBlur={[Function]}
    onChange={[Function]}
    onDragStart={[Function]}
    onDrop={[Function]}
    onFocus={[Function]}
    placeholder="E-mail"
    value=""
    width={false}
  />
  <div
    className="uk-text-danger uk-inline uk-margin-small-left"
  >
    Shows error if touched.
  </div>
</div>
`;

exports[`renders error messages correctly 3`] = `
<div
  className="uk-margin"
>
  <Input
    autoComplete="username"
    danger={true}
    icon={undefined}
    id={undefined}
    name="email"
    onBlur={[Function]}
    onChange={[Function]}
    onDragStart={[Function]}
    onDrop={[Function]}
    onFocus={[Function]}
    placeholder="E-mail"
    value=""
    width={false}
  />
  <div
    className="uk-text-danger uk-inline uk-margin-small-left uk-text-danger"
  >
    Allows custom className on error container.
  </div>
</div>
`;

exports[`renders error messages correctly 4`] = `
<div
  className="uk-margin"
>
  <Input
    autoComplete="username"
    danger={true}
    icon={undefined}
    id={undefined}
    name="email"
    onBlur={[Function]}
    onChange={[Function]}
    onDragStart={[Function]}
    onDrop={[Function]}
    onFocus={[Function]}
    placeholder="E-mail"
    value=""
    width={false}
  />
  <div
    className="uk-text-danger uk-block uk-margin-bottom"
  >
    Support rendering error message in a block beneath the field.
  </div>
</div>
`;

exports[`renders error messages correctly 5`] = `
<div
  className="uk-margin"
>
  <label
    className="uk-form-label"
    htmlFor="email"
  >
    E-mail
  </label>
  <div
    className="uk-form-controls"
  >
    <Input
      autoComplete="username"
      danger={true}
      icon={undefined}
      id="email"
      name="email"
      onBlur={[Function]}
      onChange={[Function]}
      onDragStart={[Function]}
      onDrop={[Function]}
      onFocus={[Function]}
      placeholder="E-mail"
      value=""
      width={false}
    />
    <div
      className="uk-text-danger uk-inline uk-margin-small-left"
    >
      Neatly renders error in input control group.
    </div>
  </div>
</div>
`;

exports[`renders error messages correctly 6`] = `
<div
  className="uk-margin"
>
  <label
    className="uk-form-label"
    htmlFor="email"
  >
    E-mail
  </label>
  <div
    className="uk-form-controls"
  >
    <Input
      autoComplete="username"
      danger={true}
      icon={undefined}
      id="email"
      name="email"
      onBlur={[Function]}
      onChange={[Function]}
      onDragStart={[Function]}
      onDrop={[Function]}
      onFocus={[Function]}
      placeholder="E-mail"
      value=""
      width={false}
    />
    <div
      className="uk-text-danger uk-block uk-margin-bottom"
    >
      Support rendering error message in a block beneath the field.
    </div>
  </div>
</div>
`;

exports[`renders help messages correctly 1`] = `
<div
  className="uk-margin"
>
  <Input
    autoComplete="username"
    danger={false}
    icon={undefined}
    id={undefined}
    name="email"
    onBlur={[Function]}
    onChange={[Function]}
    onDragStart={[Function]}
    onDrop={[Function]}
    onFocus={[Function]}
    placeholder="E-mail"
    value=""
    width={false}
  />
  <div
    className="uk-inline uk-margin-small-left"
  >
    Friendly message to delight the human.
  </div>
</div>
`;

exports[`renders help messages correctly 2`] = `
<div
  className="uk-margin"
>
  <Input
    autoComplete="username"
    danger={false}
    icon={undefined}
    id={undefined}
    name="email"
    onBlur={[Function]}
    onChange={[Function]}
    onDragStart={[Function]}
    onDrop={[Function]}
    onFocus={[Function]}
    placeholder="E-mail"
    value=""
    width={false}
  />
  <div
    className="uk-inline uk-margin-small-left uk-text-warning"
  >
    Supports custom className on help message.
  </div>
</div>
`;

exports[`renders help messages correctly 3`] = `
<div
  className="uk-margin"
>
  <Input
    autoComplete="username"
    danger={false}
    icon={undefined}
    id={undefined}
    name="email"
    onBlur={[Function]}
    onChange={[Function]}
    onDragStart={[Function]}
    onDrop={[Function]}
    onFocus={[Function]}
    placeholder="E-mail"
    value=""
    width={false}
  />
  <div
    className="uk-block uk-margin-bottom"
  >
    Possible to render below field.
  </div>
</div>
`;

exports[`renders help messages correctly 4`] = `
<div
  className="uk-margin"
>
  <Input
    autoComplete="username"
    danger={false}
    icon={undefined}
    id={undefined}
    name="email"
    onBlur={[Function]}
    onChange={[Function]}
    onDragStart={[Function]}
    onDrop={[Function]}
    onFocus={[Function]}
    placeholder="E-mail"
    value=""
    width={false}
  />
  <div
    className="uk-inline uk-margin-small-left"
  >
    <strong>
      Help attribute can render anything 
      <code>
        React
      </code>
       can render.
    </strong>
  </div>
</div>
`;

exports[`supports custom wrapper className 1`] = `
<div
  className="uk-display-inline-block uk-margin"
>
  <Input
    autoComplete="username"
    danger={false}
    icon={undefined}
    id={undefined}
    name="email"
    onBlur={[Function]}
    onChange={[Function]}
    onDragStart={[Function]}
    onDrop={[Function]}
    onFocus={[Function]}
    placeholder="E-mail"
    value=""
    width={false}
  />
</div>
`;
